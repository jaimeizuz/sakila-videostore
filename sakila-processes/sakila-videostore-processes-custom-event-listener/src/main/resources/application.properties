#https://quarkus.io/guides/openapi-swaggerui
quarkus.http.cors=true
quarkus.smallrye-openapi.path=/docs/openapi.json
quarkus.swagger-ui.always-include=true
quarkus.kogito.data-index.graphql.ui.always-include=true
quarkus.http.test-port=0

# Kogito-service
kogito.service.url=http://localhost:8080

#Job-service
kogito.jobs-service.url=http://localhost:8080
kogito.dataindex.http.url=http://localhost:8080

# run create tables scripts
quarkus.flyway.migrate-at-start=true
quarkus.flyway.baseline-on-migrate=true
quarkus.flyway.baseline-version=0.0
quarkus.flyway.locations=classpath:/db/migration,classpath:/db/jobs-service,classpath:/db/data-audit/postgresql
quarkus.flyway.table=FLYWAY_RUNTIME_SERVICE
quarkus.flyway.out-of-order=true

kogito.persistence.type=jdbc
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=kogito-user
quarkus.datasource.password=kogito-pass
quarkus.datasource.jdbc.url=${QUARKUS_DATASOURCE_JDBC_URL:jdbc:postgresql://localhost:5432/kogito}
quarkus.datasource.reactive.url=${QUARKUS_DATASOURCE_REACTIVE_URL:postgresql://localhost:5432/kogito}
quarkus.datasource.jdbc.telemetry=true

quarkus.native.native-image-xmx=8g

# profile to pack this example into a container, to use it execute activate the maven container profile, -Pcontainer
%container.quarkus.container-image.build=true
%container.quarkus.container-image.push=false
%container.quarkus.container-image.group=${USER}
%container.quarkus.container-image.registry=jizuzquiza
%container.quarkus.container-image.tag=0.0.1
%container.quarkus.container-image.name=sakila-videostore-processes-workflows

#%dev.quarkus.kogito.devservices.enabled=false
%dev.jbpm.devui.users.jdoe.groups=admin,HR,IT

# Disabling OIDC
quarkus.oidc.enabled=false
kogito.decisions.validation=DISABLED

#quarkus.rest-client."sakila-videostore-rest-services-url".url=http://sakila-videostore-rest-services-server:8080
quarkus.rest-client."sakila-videostore-rest-services-url".url=http://localhost:18081

quarkus.application.name=sakila-videostore-processes
quarkus.otel.exporter.otlp.traces.endpoint=http://localhost:4317
quarkus.otel.exporter.otlp.traces.headers=Authorization=Bearer my_secret
quarkus.log.console.format=%d{HH:mm:ss} %-5p traceId=%X{traceId}, parentId=%X{parentId}, spanId=%X{spanId}, sampled=%X{sampled} [%c{2.}] (%t) %s%e%n

quarkus.micrometer.export.otlp.enabled=true
quarkus.micrometer.registry-enabled-default=true
quarkus.micrometer.export.otlp.get-enabled=true
quarkus.micrometer.export.otlp.url=http://localhost:4318/v1/metrics

kogito.persistence.proto.marshaller=false
quarkus.kogito.devservices.enabled=true